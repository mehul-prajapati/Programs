!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CUSTOM_RQ_GET_LED_STATUS	ddk.h	15;"	d
CUSTOM_RQ_GET_MEM_RD_OFFSET	ddk.h	17;"	d
CUSTOM_RQ_GET_MEM_SIZE	ddk.h	20;"	d
CUSTOM_RQ_GET_MEM_TYPE	ddk.h	22;"	d
CUSTOM_RQ_GET_MEM_WR_OFFSET	ddk.h	19;"	d
CUSTOM_RQ_GET_REGISTER	ddk.h	24;"	d
CUSTOM_RQ_SET_LED_STATUS	ddk.h	14;"	d
CUSTOM_RQ_SET_MEM_RD_OFFSET	ddk.h	16;"	d
CUSTOM_RQ_SET_MEM_TYPE	ddk.h	21;"	d
CUSTOM_RQ_SET_MEM_WR_OFFSET	ddk.h	18;"	d
CUSTOM_RQ_SET_REGISTER	ddk.h	23;"	d
DDK_DATA_GET	ddk_usb.h	40;"	d
DDK_DATA_SET	ddk_usb.h	41;"	d
DDK_H	ddk.h	2;"	d
DDK_IO_H	ddk_io.h	2;"	d
DDK_LED_GET	ddk_led.h	16;"	d
DDK_LED_GET	ddk_usb.h	32;"	d
DDK_LED_H	ddk_led.h	2;"	d
DDK_LED_SET	ddk_led.h	17;"	d
DDK_LED_SET	ddk_usb.h	33;"	d
DDK_MEM_H	ddk_mem.h	2;"	d
DDK_MEM_SIZE_GET	ddk_mem.h	27;"	d
DDK_MEM_SIZE_GET	ddk_usb.h	38;"	d
DDK_PRODUCT_ID	ddk.h	8;"	d
DDK_RD_OFF_GET	ddk_mem.h	23;"	d
DDK_RD_OFF_GET	ddk_usb.h	34;"	d
DDK_RD_OFF_SET	ddk_mem.h	24;"	d
DDK_RD_OFF_SET	ddk_usb.h	35;"	d
DDK_REG_GET	ddk_io.h	16;"	d
DDK_REG_SET	ddk_io.h	17;"	d
DDK_U2S_H	ddk_u2s.h	2;"	d
DDK_USB_H	ddk_usb.h	2;"	d
DDK_VENDOR_ID	ddk.h	7;"	d
DDK_WR_OFF_GET	ddk_mem.h	25;"	d
DDK_WR_OFF_GET	ddk_usb.h	36;"	d
DDK_WR_OFF_SET	ddk_mem.h	26;"	d
DDK_WR_OFF_SET	ddk_usb.h	37;"	d
ENABLE_FILE_OPS	ddk.h	10;"	d
IoctlData	ddk_usb.h	/^} IoctlData;$/;"	t	typeref:struct:__anon1
KERNEL_SOURCE	Makefile	/^	KERNEL_SOURCE := \/usr\/src\/linux$/;"	m
MAX_ENDPOINTS	ddk.h	26;"	d
MEM_EP_IN	ddk.h	28;"	d
MEM_EP_OUT	ddk.h	29;"	d
MEM_IN	ddk_usb.h	9;"	d
MEM_OUT	ddk_usb.h	10;"	d
MIN	ddk_mem.c	16;"	d	file:
MIN	ddk_u2s.c	12;"	d	file:
MIN	ddk_usb.c	15;"	d	file:
PWD	Makefile	/^	PWD := $(shell pwd)$/;"	m
RegId	ddk_io.h	/^} RegId;$/;"	t	typeref:enum:__anon3
Register	ddk_io.h	/^} Register;$/;"	t	typeref:struct:__anon4
SER_EP_IN	ddk.h	30;"	d
SER_EP_OUT	ddk.h	31;"	d
SER_IN	ddk_usb.h	11;"	d
SER_OUT	ddk_usb.h	12;"	d
attrib	ddk_usb.h	/^	int attrib[MAX_ENDPOINTS];$/;"	m	struct:ddk_device
buf	ddk_usb.h	/^	unsigned char *buf[MAX_ENDPOINTS];$/;"	m	struct:ddk_device
buf_left_over	ddk_usb.h	/^	int buf_left_over[MAX_ENDPOINTS];$/;"	m	struct:ddk_device
buf_size	ddk_usb.h	/^	int buf_size[MAX_ENDPOINTS];$/;"	m	struct:ddk_device
c_dev	ddk_io.c	/^static struct cdev c_dev;$/;"	v	typeref:struct:cdev	file:
c_dev	ddk_led.c	/^static struct cdev c_dev;$/;"	v	typeref:struct:cdev	file:
c_dev	ddk_mem.c	/^static struct cdev c_dev;$/;"	v	typeref:struct:cdev	file:
c_dev	ddk_u2s.c	/^static struct cdev c_dev;$/;"	v	typeref:struct:cdev	file:
c_dev	ddk_usb.c	/^static struct cdev c_dev;$/;"	v	typeref:struct:cdev	file:
char_deregister_dev	ddk_io.c	/^static void char_deregister_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_deregister_dev	ddk_led.c	/^static void char_deregister_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_deregister_dev	ddk_mem.c	/^static void char_deregister_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_deregister_dev	ddk_u2s.c	/^static void char_deregister_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_deregister_dev	ddk_usb.c	/^static void char_deregister_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_register_dev	ddk_io.c	/^static int char_register_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_register_dev	ddk_led.c	/^static int char_register_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_register_dev	ddk_mem.c	/^static int char_register_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_register_dev	ddk_u2s.c	/^static int char_register_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
char_register_dev	ddk_usb.c	/^static int char_register_dev(struct usb_interface *interface, struct usb_class_driver *class)$/;"	f	file:
cl	ddk_io.c	/^static struct class *cl;$/;"	v	typeref:struct:class	file:
cl	ddk_led.c	/^static struct class *cl;$/;"	v	typeref:struct:class	file:
cl	ddk_mem.c	/^static struct class *cl;$/;"	v	typeref:struct:class	file:
cl	ddk_u2s.c	/^static struct class *cl;$/;"	v	typeref:struct:class	file:
cl	ddk_usb.c	/^static struct class *cl;$/;"	v	typeref:struct:class	file:
data	ddk_usb.h	/^	char data[8];$/;"	m	struct:__anon1
ddk_close	ddk_io.c	/^static int ddk_close(struct inode *i, struct file *f)$/;"	f	file:
ddk_close	ddk_led.c	/^static int ddk_close(struct inode *i, struct file *f)$/;"	f	file:
ddk_close	ddk_mem.c	/^static int ddk_close(struct inode *i, struct file *f)$/;"	f	file:
ddk_close	ddk_u2s.c	/^static int ddk_close(struct inode *i, struct file *f)$/;"	f	file:
ddk_close	ddk_usb.c	/^static int ddk_close(struct inode *i, struct file *f)$/;"	f	file:
ddk_dev	ddk_io.c	/^static struct ddk_device ddk_dev; \/\/ Need to be persistent$/;"	v	typeref:struct:ddk_device	file:
ddk_dev	ddk_led.c	/^static struct ddk_device ddk_dev; \/\/ Need to be persistent$/;"	v	typeref:struct:ddk_device	file:
ddk_device	ddk_io.h	/^struct ddk_device$/;"	s
ddk_device	ddk_led.h	/^struct ddk_device$/;"	s
ddk_device	ddk_mem.h	/^struct ddk_device$/;"	s
ddk_device	ddk_u2s.h	/^struct ddk_device$/;"	s
ddk_device	ddk_usb.h	/^struct ddk_device$/;"	s
ddk_device_file	ddk_mem.h	/^struct ddk_device_file$/;"	s
ddk_disconnect	ddk_io.c	/^static void ddk_disconnect(struct usb_interface *interface)$/;"	f	file:
ddk_disconnect	ddk_led.c	/^static void ddk_disconnect(struct usb_interface *interface)$/;"	f	file:
ddk_disconnect	ddk_mem.c	/^static void ddk_disconnect(struct usb_interface *interface)$/;"	f	file:
ddk_disconnect	ddk_u2s.c	/^static void ddk_disconnect(struct usb_interface *interface)$/;"	f	file:
ddk_disconnect	ddk_usb.c	/^static void ddk_disconnect(struct usb_interface *interface)$/;"	f	file:
ddk_driver	ddk_io.c	/^static struct usb_driver ddk_driver =$/;"	v	typeref:struct:usb_driver	file:
ddk_driver	ddk_led.c	/^static struct usb_driver ddk_driver =$/;"	v	typeref:struct:usb_driver	file:
ddk_driver	ddk_mem.c	/^static struct usb_driver ddk_driver =$/;"	v	typeref:struct:usb_driver	file:
ddk_driver	ddk_u2s.c	/^static struct usb_driver ddk_driver =$/;"	v	typeref:struct:usb_driver	file:
ddk_driver	ddk_usb.c	/^static struct usb_driver ddk_driver =$/;"	v	typeref:struct:usb_driver	file:
ddk_exit	ddk_io.c	/^module_exit(ddk_exit);$/;"	v
ddk_exit	ddk_io.c	/^static void __exit ddk_exit(void)$/;"	f	file:
ddk_exit	ddk_led.c	/^module_exit(ddk_exit);$/;"	v
ddk_exit	ddk_led.c	/^static void __exit ddk_exit(void)$/;"	f	file:
ddk_exit	ddk_mem.c	/^module_exit(ddk_exit);$/;"	v
ddk_exit	ddk_mem.c	/^static void __exit ddk_exit(void)$/;"	f	file:
ddk_exit	ddk_u2s.c	/^module_exit(ddk_exit);$/;"	v
ddk_exit	ddk_u2s.c	/^static void __exit ddk_exit(void)$/;"	f	file:
ddk_exit	ddk_usb.c	/^module_exit(ddk_exit);$/;"	v
ddk_exit	ddk_usb.c	/^static void __exit ddk_exit(void)$/;"	f	file:
ddk_init	ddk_io.c	/^module_init(ddk_init);$/;"	v
ddk_init	ddk_io.c	/^static int __init ddk_init(void)$/;"	f	file:
ddk_init	ddk_led.c	/^module_init(ddk_init);$/;"	v
ddk_init	ddk_led.c	/^static int __init ddk_init(void)$/;"	f	file:
ddk_init	ddk_mem.c	/^module_init(ddk_init);$/;"	v
ddk_init	ddk_mem.c	/^static int __init ddk_init(void)$/;"	f	file:
ddk_init	ddk_u2s.c	/^module_init(ddk_init);$/;"	v
ddk_init	ddk_u2s.c	/^static int __init ddk_init(void)$/;"	f	file:
ddk_init	ddk_usb.c	/^module_init(ddk_init);$/;"	v
ddk_init	ddk_usb.c	/^static int __init ddk_init(void)$/;"	f	file:
ddk_ioctl	ddk_io.c	/^static int ddk_ioctl(struct inode *i, struct file *f, unsigned int cmd, unsigned long arg)$/;"	f	file:
ddk_ioctl	ddk_led.c	/^static int ddk_ioctl(struct inode *i, struct file *f, unsigned int cmd, unsigned long arg)$/;"	f	file:
ddk_ioctl	ddk_mem.c	/^static int ddk_ioctl(struct inode *i, struct file *f, unsigned int cmd, unsigned long arg)$/;"	f	file:
ddk_ioctl	ddk_usb.c	/^static int ddk_ioctl(struct inode *i, struct file *f, unsigned int cmd, unsigned long arg)$/;"	f	file:
ddk_llseek	ddk_mem.c	/^static loff_t ddk_llseek(struct file *f, loff_t offset, int whence)$/;"	f	file:
ddk_open	ddk_io.c	/^static int ddk_open(struct inode *i, struct file *f)$/;"	f	file:
ddk_open	ddk_led.c	/^static int ddk_open(struct inode *i, struct file *f)$/;"	f	file:
ddk_open	ddk_mem.c	/^static int ddk_open(struct inode *i, struct file *f)$/;"	f	file:
ddk_open	ddk_u2s.c	/^static int ddk_open(struct inode *i, struct file *f)$/;"	f	file:
ddk_open	ddk_usb.c	/^static int ddk_open(struct inode *i, struct file *f)$/;"	f	file:
ddk_probe	ddk_io.c	/^static int ddk_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
ddk_probe	ddk_led.c	/^static int ddk_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
ddk_probe	ddk_mem.c	/^static int ddk_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
ddk_probe	ddk_u2s.c	/^static int ddk_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
ddk_probe	ddk_usb.c	/^static int ddk_probe(struct usb_interface *interface, const struct usb_device_id *id)$/;"	f	file:
ddk_read	ddk_mem.c	/^static ssize_t ddk_read(struct file *f, char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
ddk_read	ddk_u2s.c	/^static ssize_t ddk_read(struct file *f, char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
ddk_read	ddk_usb.c	/^static ssize_t ddk_read(struct file *f, char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
ddk_table	ddk_io.c	/^static struct usb_device_id ddk_table[] =$/;"	v	typeref:struct:usb_device_id	file:
ddk_table	ddk_led.c	/^static struct usb_device_id ddk_table[] =$/;"	v	typeref:struct:usb_device_id	file:
ddk_table	ddk_mem.c	/^static struct usb_device_id ddk_table[] =$/;"	v	typeref:struct:usb_device_id	file:
ddk_table	ddk_u2s.c	/^static struct usb_device_id ddk_table[] =$/;"	v	typeref:struct:usb_device_id	file:
ddk_table	ddk_usb.c	/^static struct usb_device_id ddk_table[] =$/;"	v	typeref:struct:usb_device_id	file:
ddk_write	ddk_mem.c	/^static ssize_t ddk_write(struct file *f, const char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
ddk_write	ddk_u2s.c	/^static ssize_t ddk_write(struct file *f, const char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
ddk_write	ddk_usb.c	/^static ssize_t ddk_write(struct file *f, const char __user *buf, size_t cnt, loff_t *off)$/;"	f	file:
dev	ddk_io.c	/^static dev_t dev;$/;"	v	file:
dev	ddk_led.c	/^static dev_t dev;$/;"	v	file:
dev	ddk_mem.c	/^static dev_t dev;$/;"	v	file:
dev	ddk_u2s.c	/^static dev_t dev;$/;"	v	file:
dev	ddk_usb.c	/^static dev_t dev;$/;"	v	file:
device	ddk_io.h	/^	struct usb_device *device;$/;"	m	struct:ddk_device	typeref:struct:ddk_device::usb_device
device	ddk_led.h	/^	struct usb_device *device;$/;"	m	struct:ddk_device	typeref:struct:ddk_device::usb_device
device	ddk_mem.h	/^	struct usb_device *device;$/;"	m	struct:ddk_device	typeref:struct:ddk_device::usb_device
device	ddk_u2s.h	/^	struct usb_device *device;$/;"	m	struct:ddk_device	typeref:struct:ddk_device::usb_device
device	ddk_usb.h	/^	struct usb_device *device;$/;"	m	struct:ddk_device	typeref:struct:ddk_device::usb_device
dira	ddk_io.h	/^	dira,$/;"	e	enum:__anon3
dirb	ddk_io.h	/^	dirb,$/;"	e	enum:__anon3
dirc	ddk_io.h	/^	dirc,$/;"	e	enum:__anon3
dird	ddk_io.h	/^	dird,$/;"	e	enum:__anon3
e_read	ddk_mem.c	/^	e_read,$/;"	e	enum:__anon2	file:
e_write	ddk_mem.c	/^	e_write$/;"	e	enum:__anon2	file:
ep	ddk_usb.h	/^	int ep[MAX_ENDPOINTS];$/;"	m	struct:ddk_device
fops	ddk_io.c	/^static struct file_operations fops =$/;"	v	typeref:struct:file_operations	file:
fops	ddk_led.c	/^static struct file_operations fops =$/;"	v	typeref:struct:file_operations	file:
fops	ddk_mem.c	/^static struct file_operations fops =$/;"	v	typeref:struct:file_operations	file:
fops	ddk_u2s.c	/^static struct file_operations fops =$/;"	v	typeref:struct:file_operations	file:
fops	ddk_usb.c	/^static struct file_operations fops =$/;"	v	typeref:struct:file_operations	file:
g_ddk_dev	ddk_mem.c	/^static struct ddk_device g_ddk_dev;$/;"	v	typeref:struct:ddk_device	file:
g_ddk_dev	ddk_u2s.c	/^static struct ddk_device g_ddk_dev;$/;"	v	typeref:struct:ddk_device	file:
g_ddk_dev	ddk_usb.c	/^static struct ddk_device g_ddk_dev;$/;"	v	typeref:struct:ddk_device	file:
get_ep_index	ddk_usb.c	/^static int get_ep_index(int ep)$/;"	f	file:
get_off	ddk_mem.c	/^static int get_off(struct ddk_device *dev, int dir)$/;"	f	file:
get_size	ddk_mem.c	/^static int get_size(struct ddk_device *dev)$/;"	f	file:
id	ddk_io.h	/^	RegId id;$/;"	m	struct:__anon4
in_buf	ddk_mem.h	/^	unsigned char *in_buf, *out_buf;$/;"	m	struct:ddk_device_file
in_buf	ddk_u2s.h	/^	unsigned char *in_buf, *out_buf;$/;"	m	struct:ddk_device
in_buf_left_over	ddk_mem.h	/^	int in_buf_left_over;$/;"	m	struct:ddk_device_file
in_buf_left_over	ddk_u2s.h	/^	int in_buf_left_over;$/;"	m	struct:ddk_device
in_buf_size	ddk_mem.h	/^	int in_buf_size, out_buf_size;$/;"	m	struct:ddk_device
in_buf_size	ddk_u2s.h	/^	int in_buf_size, out_buf_size;$/;"	m	struct:ddk_device
in_ep	ddk_mem.h	/^	int in_ep, out_ep;$/;"	m	struct:ddk_device
in_ep	ddk_u2s.h	/^	int in_ep, out_ep;$/;"	m	struct:ddk_device
len	ddk_usb.h	/^	int len;$/;"	m	struct:__anon1
m	ddk_mem.c	/^DEFINE_MUTEX(m);$/;"	v
obj-m	Makefile	/^	obj-m := $(src-m:.c=.o)$/;"	m
open_cnt	ddk_mem.c	/^static atomic_t open_cnt;$/;"	v	file:
out_buf	ddk_mem.h	/^	unsigned char *in_buf, *out_buf;$/;"	m	struct:ddk_device_file
out_buf	ddk_u2s.h	/^	unsigned char *in_buf, *out_buf;$/;"	m	struct:ddk_device
out_buf_size	ddk_mem.h	/^	int in_buf_size, out_buf_size;$/;"	m	struct:ddk_device
out_buf_size	ddk_u2s.h	/^	int in_buf_size, out_buf_size;$/;"	m	struct:ddk_device
out_ep	ddk_mem.h	/^	int in_ep, out_ep;$/;"	m	struct:ddk_device
out_ep	ddk_u2s.h	/^	int in_ep, out_ep;$/;"	m	struct:ddk_device
porta	ddk_io.h	/^	porta,$/;"	e	enum:__anon3
portb	ddk_io.h	/^	portb,$/;"	e	enum:__anon3
portc	ddk_io.h	/^	portc,$/;"	e	enum:__anon3
portd	ddk_io.h	/^	portd,$/;"	e	enum:__anon3
rsvd	ddk_io.h	/^	rsvd,$/;"	e	enum:__anon3
set_off	ddk_mem.c	/^static int set_off(struct ddk_device *dev, int dir, int offset)$/;"	f	file:
src-m	Makefile	/^	src-m := $(filter-out ${src-mod}, ${src-m})$/;"	m
src-m	Makefile	/^	src-m := $(notdir $(wildcard ${SUBDIRS}\/*.c))$/;"	m
src-mod	Makefile	/^	src-mod := $(notdir $(wildcard ${SUBDIRS}\/*.mod.c))$/;"	m
total_reg_id	ddk_io.h	/^	total_reg_id$/;"	e	enum:__anon3
val	ddk_io.h	/^	unsigned char val;$/;"	m	struct:__anon4

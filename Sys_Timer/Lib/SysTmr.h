#ifndef _SYS_TMR_H
#define _SYS_TMR_H

//==================================================================
//================= @INCLUDES ======================================
//==================================================================
#include "types.h"

//==================================================================
//================= @DEFINES =======================================
//==================================================================
#define RCV_BUF_LEN_MAX				1024

//==================================================================
//================= @ENUMS =========================================
//==================================================================

//==================================================================
//================= @DATATYPES =====================================
//==================================================================
typedef struct
{
  	UINT32 appId; 
 	UINT32 appData;

	UINT32 tmrCnt;

	/* It will get called when timer expires */
  	void (*pCallback) (UINT32 appId, UINT32 appData);
  
} SYS_TIMER;

//==================================================================
//================= @FUNCTION PROTOTYPE ============================
//==================================================================
UINT8 SYS_TIMER_Init(SYS_TIMER *pTimer, UINT32 appId);
UINT8 SYS_TIMER_Set_Callback(SYS_TIMER *pTimer, void (*pCallback)(UINT32 appId, UINT32 appData));

UINT8 SYS_TIMER_Start(SYS_TIMER *pTimer, UINT32 tmrCnt, UINT32 appData);
UINT8 SYS_TIMER_Stop(SYS_TIMER *pTimer);

/* For all registered timers */
void SYS_TIMER_Tick(void);
#endif
